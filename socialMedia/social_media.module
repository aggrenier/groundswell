<?php
/**
* @file
* This module provides a node type called job post
*/
/**
* Implements hook_node_info() to provide our social_media type.
*/
function social_media_node_info() {
  return array(
    'social_media' => array(
    'name' => t('Social Media'),
    'base' => 'social_media',
    'description' => t('Use this content type to post on Twitter and/or Facebook.'),
    'has_title' => TRUE,
    'title_label' => t('Social Media Post'),
    'help' => t('Post on Twitter and/or Facebook.'),
    ),
  );
}

function social_media_menu() {
  
  //Pannel social Media
  $items['admin/config/socialMedia'] = array(
    'title' => 'Social Media',
    'description' => 'Social media configuration.',
    'position' => 'right',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  
  //Tracking Pannel
  $items['admin/config/socialMedia/tracking'] = array(
    'title' => 'Tracking',
    'description' => 'Track your post.',
    'position' => 'right',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  
  $items['admin/config/socialMedia/tracking/trackFacebook'] = array(
    'title' => 'Track your Facebook post',
    'description' => 'Look the comments of your Facebook posts.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('social_media_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'socialMedia.admin.inc',
  );
  $items['admin/config/socialMedia/tracking/trackTwitter'] = array(
    'title' => 'Track your Twitter post',
    'description' => 'Look the comments of Twitter posts.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('social_media_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'socialMedia.admin.inc',
  ); 
  $items['admin/config/socialMedia/OAuthTwitter'] = array(
    'title' => 'Twitter OAuth keys.',
    'description' => 'To add/change your Twitter OAuth keys',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('twitter_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'socialMedia.admin.inc',
  );
  
   $items['admin/config/services/fbautopost'] = array(
    'title' => 'Facebook Autopost',
    'description' => 'Allows you to set your Facebook credentials and select the pages you want to make available to Drupal to post to.',
    'access arguments' => array('administer fb_autopost'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fb_autopost_global_settings'),
    'file' => 'fb_autopost.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/services/fbautopost/settings'] = $items['admin/config/services/fbautopost'];
  $items['admin/config/services/fbautopost/settings']['type'] = MENU_DEFAULT_LOCAL_TASK;
  $items['admin/config/services/fbautopost/login'] = array(
    'title' => 'Facebook Autopost Login',
    'description' => 'Callback that executes right after login in with Facebook.',
    'access arguments' => array('administer fb_autopost'),
    'page callback' => 'fb_autopost_facebook_login',
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/services/fbautopost/logout'] = array(
    'title' => 'Facebook Autopost Logout',
    'description' => 'Callback that executes right after login in from Facebook.',
    'access arguments' => array('administer fb_autopost'),
    'page callback' => 'fb_autopost_facebook_logout',
    'type' => MENU_CALLBACK,
  );
  $items['fbautopost/authorization/retry'] = array(
    'title' => 'Post Authorization retry callback',
    'description' => 'Come back here after authorizing the app for publishing on timeline.',
    'access arguments' => array('access content'),
    'page callback' => 'fb_autopost_authorization_retry',
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/services/fbautopost/session/view'] = array(
    'title' => 'View',
    'description' => 'View the session data.',
    'page arguments' => array(5),
    'access arguments' => array('administer fb_autopost'),
    'page callback' => 'fb_autopost_session',
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/config/services/fbautopost/session/clear'] = array(
    'title' => 'Clear',
    'description' => 'Clear the session data.',
    'page arguments' => array(5),
    'access arguments' => array('administer fb_autopost'),
    'page callback' => 'fb_autopost_session',
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/config/services/fbautopost/session'] = array(
    'title' => 'Session handling',
    'description' => 'Perform administrative tasks over the session object.',
    'page arguments' => array('view'),
    'access arguments' => array('administer fb_autopost'),
    'page callback' => 'fb_autopost_session',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}
function social_media_menu_alter(&$callbacks) {
  // If the user does not have 'administer nodes' permission,
  // disable the social_media menu item by setting its access callback to FALSE.
  if (!user_access('administer nodes')) {
    $callbacks['node/add/social_media']['access callback'] = FALSE;
    // Must unset access arguments or Drupal will use user_access()
    // as a default access callback.
    unset($callbacks['node/add/social_media']['access arguments']);
  }
}

function social_media_permission() {
  return array(
    'create social Media post' => array(
      'title' => t('Create a social Media post'),
      'description' => t('Create a social Media posting'),
    ),
    'edit own social Media post' => array(
      'title' => t('Edit own social Media post'),
      'description' => t('Edit your own social Media posting'),
    ),
    'edit any social Media post' => array(
      'title' => t('Edit any social Media post'),
      'description' => t('Edit any social Media post'),
    ),
    'delete own social Media post' => array(
      'title' => t('Delete own social Media post'),
      'description' => t('Delete own social Media posting'),
   ),
    'delete any social Media post' => array(
      'title' => t('Delete any social Media post'),
      'description' => t('Delete any social Media posting'),
    ),
    'administer fb_autopost' => array(
      'title' => t('Administer Facebook Autopost'),
      'description' => t('Allows setting default Facebook pages to publish to.'),
    ),
  );
}
/**
* Implements hook_node_access().
*/
function social_media_access($op, $node, $account) {
  $is_author = $account->uid == $node->uid;
  switch ($op) {
    case 'create':
      // Allow if user's role has 'create social' permission.
      if (user_access('create social Media', $account)) {
        return NODE_ACCESS_ALLOW;
      }
    case 'update':
      // Allow if user's role has 'edit own social' permission and user is
      // the author; or if the user's role has 'edit any social' permission.
      if (user_access('edit own social Media', $account) && $is_author ||
        user_access('edit any social Media', $account)) {
          return NODE_ACCESS_ALLOW;
      }
    case 'delete':
      // Allow if user's role has 'delete own social' permission and user is
      // the author; or if the user's role has 'delete any social' permission.
      if (user_access('delete own social Media', $account) && $is_author ||
      user_access('delete any social Media', $account)) {
      return NODE_ACCESS_ALLOW;
    }
  }
}
/**
* Implement hook_form() with the standard default form.
*/
function social_media_form($node, $form_state) {
  return node_content_form($node, $form_state);
}